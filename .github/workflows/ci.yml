name: Pipeline for BeyoundDouble Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_JAVA: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Run Tests with Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Run tests with coverage
        run: |
          mvn clean test jacoco:report
          mvn jacoco:check

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/

      - name: Verify coverage threshold
        run: |
          echo "Verifying coverage at least 90%..."
          mvn jacoco:check

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: target/*.jar

  docker:
    name: Build and Test Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: success()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Build Docker image
        run: |
          docker build -t my-maven-app:latest .
          
      - name: Test Docker image
        run: |
          docker run -d --name test-container -p 8080:8080 my-maven-app:latest
          sleep 30
          docker ps | grep test-container
          docker logs test-container
          
      - name: Cleanup Docker
        run: |
          docker stop test-container || true
          docker rm test-container || true

      # (Opcional) Publicar en Docker Hub
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #
      # - name: Push Docker image
      #   run: |
      #     docker tag my-maven-app:latest ${{ secrets.DOCKER_USERNAME }}/my-maven-app:latest
      #     docker push ${{ secrets.DOCKER_USERNAME }}/my-maven-app:latest